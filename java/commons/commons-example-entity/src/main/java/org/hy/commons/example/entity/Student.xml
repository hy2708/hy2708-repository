<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hy.commons.example.entity.Student">

			<resultMap type="org.hy.commons.example.entity.Student" id="studentMap">
			<!--
			<id column="id" property="id"/>
			-->

			<result property="sex" column="sex"/>
			<id property="id" column="id"/>
			222222
			333333333333
			<result property="name" column="name"/>
				 			
			<!-- 多对一的关系 -->
				<association property="classroom" javaType="org.hy.commons.example.entity.Classroom">
					<id column="id" property="id"/>
					<result property="grade" column="grade"/>
					<result property="special" column="special"/>
					<result property="students" column="students"/>
					<result property="name" column="name"/>
				</association>
					
					<!-- 一对多 -->
		<!-- property:指的是集合属性的值 ofType：集合中元素的类型-->
		<collection property="course" ofType="org.hy.commons.example.entity.Course">
			<id column="id" property="id"/>
				<result property="students" column="students"/>
		</collection>
		
			<!--为空-->
		</resultMap>
	
	<sql id="mysql">
		<!-- 
		 id,name,address
		 -->
		  * 
	</sql>
	
	
<!-- 根据id查询User -->
	<!-- id:当前sql语句的唯一标示  parameterType：参数类型 resultType:结果类型(返回值类型)-->
	<select id="selectUserById" parameterType="string" resultMap="studentMap">
		select <include refid="mysql"/> from t_Student where id = #{id}
	</select>
	
	<!-- 查询所有User -->
	<select id="selectAllUsers" resultType="org.hy.commons.example.entity.Student">
		select id,name as userName ,address from t_Student
	</select>
	
	<!-- 根据id查询User，返回值为：Map -->
	<select id="selectUserByIdForMap" parameterType="string" resultType="hashmap">
		select id,name,address from t_Student where id = #{userid}
	</select>
	
	<!-- 动态sql -->
	<select id="selectUserByCondition" parameterType="org.hy.commons.example.entity.Student" resultType="org.hy.commons.example.entity.Student">
		select id,name as userName ,address from t_Student where 1=1
		<if test="id != null">
			and id = #{id}
		</if>
		<!-- userName指的是实体的属性 -->
		<if test="userName != null">
			and name = #{userName}
		</if>
		<if test="address != null">
			and address = #{address}
		</if>
	</select>
	
	<!-- 动态sql -->
	<select id="selectUserByCondition2" parameterType="org.hy.commons.example.entity.Student" resultType="org.hy.commons.example.entity.Student">
		select id,name as userName ,address from t_Student
		<where>
			<if test="id != null">
			   id = #{id}
			</if>
			<!-- userName指的是实体的属性 -->
			<if test="userName != null">
				and name = #{userName}
			</if>
			<if test="address != null">
				and address = #{address}
			</if>
		</where>
	</select>
	
	<!-- 插入User -->
	<insert id="insertUser" parameterType="org.hy.commons.example.entity.Student">
		insert into t_Student (id,name,address) values (#{id},#{userName},#{address});
	</insert>
	
	<!-- 插入User 参数为hashmap-->
	<insert id="insertUserForMap" parameterType="hashmap">
		insert into t_Student (id,name,address) values (#{id},#{name},#{address});
	</insert>
	
	<!-- 根据id删除User -->
	<delete id="deleteUserById" parameterType="string">
		delete from t_Student where id = #{id}
	</delete>
	
	<!-- 根据id更新User -->
	<update id="updateUserById" parameterType="org.hy.commons.example.entity.Student">
		update t_Student set name = #{userName},address = #{address} where id = #{id}
	</update>
	
	<!-- 根据id更新User 参数为map-->
	<update id="updateUserByIdForMap" parameterType="hashmap">
		update t_Student set name = #{userName},address = #{address} where id = #{id}
	</update>
	
</mapper>