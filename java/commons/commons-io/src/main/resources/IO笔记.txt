该模块是逻辑内聚

File类本身是与文件操作有关，
但是如果要想操作内容则必须使用字节流或字符流完成，
但是不管是使用何种的输入输出流，
其基本的操作原理是一样的（以文件流为准）
:
使用File类找到一个文件对象,得到IO操作的源或目标
通过字节流或字符流的子类创建对象,(得到IO操作的通道)
进行读或写的操作,(IO操作)
关闭输入/输出,(打完收工,注意节约资源,关掉)

总结：四步：定位文件-建立通道-传输数据-关闭通道

流，相关

字节流和字符流二者仅仅是操作单位不一样。
★字符流=字节流+很多的字符的编码对照表
InputStream和Reader是所有输入流的基类，他们都是抽象类，本身不能创建实例，但是他们是所有输入流的模板。
***
一般来说处理字符或字符串时使用字符流，处理字节或二进制对象时应使用字节流；

字节流主要是操作byte(字节)的类型数据:
字节输出流：OutputStream
字节输入流：InputStream
OutputStream|InputStream传输的是字节，即：byte，那么
1 字节流创建的时候，参数，只包含文件路径，和是否对文件尾部进行追加。
    ★★★★ 不包括，字节的编码（因为字节没有特殊的编码）
2 字节流读写的时候，参数，是字节数据

Writer|Reader传输的是字符，即：英文字母和汉字等，那么
1 字符流创建的时候，参数，包含字节流，和字符的编码。
★★★★包括，字符的编码（因为字符，是给人阅读的，但是因为不同的人，有不同语言，所以一个字节不足以表示所以的符号，由此，需要特定的字符编码，字节没有特殊的编码）
2 字节流读写的时候，参数，是字节数据，